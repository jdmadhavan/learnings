<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="1" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="12352" started-at="2019-04-24T12:14:50Z" finished-at="2019-04-24T12:15:03Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@5bc79255]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="12352" started-at="2019-04-24T12:14:50Z" finished-at="2019-04-24T12:15:03Z">
      <class name="runner.Runner">
        <test-method status="PASS" signature="startReport()[pri:0, instance:runner.Runner@5bc79255]" name="startReport" is-config="true" duration-ms="1531" started-at="2019-04-24T12:14:49Z" finished-at="2019-04-24T12:14:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setData()[pri:0, instance:runner.Runner@5bc79255]" name="setData" is-config="true" duration-ms="1" started-at="2019-04-24T12:14:50Z" finished-at="2019-04-24T12:14:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setData -->
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.Runner@5bc79255]" name="setUpClass" is-config="true" duration-ms="356" started-at="2019-04-24T12:14:50Z" finished-at="2019-04-24T12:14:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="report()[pri:0, instance:runner.Runner@5bc79255]" name="report" is-config="true" duration-ms="19" started-at="2019-04-24T12:14:51Z" finished-at="2019-04-24T12:14:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- report -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:runner.Runner@5bc79255]" name="beforeMethod" is-config="true" duration-ms="8961" started-at="2019-04-24T12:14:51Z" finished-at="2019-04-24T12:15:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.Runner@5bc79255]" name="runScenario" duration-ms="2545" started-at="2019-04-24T12:15:00Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2019-04-24T12:15:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Login"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:runner.Runner@5bc79255]" name="afterMethod" is-config="true" duration-ms="262" started-at="2019-04-24T12:15:02Z" finished-at="2019-04-24T12:15:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.Runner@5bc79255]" name="tearDownClass" is-config="true" duration-ms="13" started-at="2019-04-24T12:15:03Z" finished-at="2019-04-24T12:15:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method status="PASS" signature="stopReport()[pri:0, instance:runner.Runner@5bc79255]" name="stopReport" is-config="true" duration-ms="1129" started-at="2019-04-24T12:15:03Z" finished-at="2019-04-24T12:15:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopReport -->
      </class> <!-- runner.Runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
